name: GitHub Actions Runner in Docker - Latest
on:
  push:
    paths-ignore:
      - Dockerfile.base
      - README.md
    branches:
      - master
      - develop
  schedule:
    - cron:  '59 23 * * *'
  workflow_dispatch:

env:
  DOCKER_REGISTRY: quay.io
  DOCKER_IMAGE_BASE: quay.io/hmpps/browser-testing-github-actions-runner-base
  DOCKER_IMAGE: quay.io/hmpps/browser-testing-github-actions-runner

jobs:
  ubuntu_latest_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Update Dockerfile FROM org
        run: sed -i.bak "s|FROM.*|FROM ${{ env.DOCKER_IMAGE_BASE }}:latest|" Dockerfile
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          pull: true
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  ubuntu_deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [jammy, focal, bionic]
      fail-fast: false
    steps:
      - name: Copy Repo Files
        uses: actions/checkout@master
      - name: Get GitHub organization or user
        run: echo 'ORG='$(echo $(dirname ${GITHUB_REPOSITORY}) | awk '{print tolower($0)}') >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Copy Dockerfile
        run: cp Dockerfile Dockerfile.ubuntu-${{ matrix.release }}; sed -i.bak "s|FROM.*|FROM ${{ env.DOCKER_IMAGE_BASE }}:ubuntu-${{ matrix.release }}|" Dockerfile.ubuntu-${{ matrix.release }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.ubuntu-${{ matrix.release }}
          pull: true
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:ubuntu-${{ matrix.release }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
